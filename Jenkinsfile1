pipeline {
    agent any
    tools {
        maven 'mvn'
        jdk 'JDK_8'
    }
    environment {
        registry = "amitwave/test" // this is the name of the repository e.g. https://hub.docker.com/repository/docker/amitwave/test. in this case amitwave/test
        registryCredential = 'dockerhub'
        dockerImage = ''
    }

    stages {
        stage ('Initialize') {
            steps {
                sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''
            }
        }

        stage ('Build') {
            steps {
                sh 'mvn -Dmaven.test.failure.ignore=true install'
            }
            post {
                success {
                echo 'Build success'
                   // junit 'target/surefire-reports/**/*.xml'
                }
            }
        }

        stage('Building image') {
            steps{
              script {
               // dockerImage =  ${env.registry} + ":${env.BUILD_ID}"

                //echo 'Docker image name ' + "$dockerImage"

                echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
                sh 'docker build -t $registry:${BUILD_ID}  .'
              }
            }
            post {
                         success {
                            sh 'echo Docker image created  $registry:${BUILD_ID}'
                            }
                        }
          }
    stage('Deploy Image') {
      steps{
        script {
        withDockerRegistry([ credentialsId: "dockerhub", url: "" ]) {

        sh "docker tag $registry:${BUILD_ID} $registry:${BUILD_ID}"
        sh "docker tag $registry:${BUILD_ID} $registry:latest"
        sh "docker push $registry:${BUILD_ID}"
        sh "docker push $registry:latest"
        }
        }
      }
    }

          stage('Remove Unused docker image') {
                steps{
                  sh "docker rmi $registry:${env.BUILD_ID}"
                  sh "docker rmi $registry:latest"

                }
          }
    }
}